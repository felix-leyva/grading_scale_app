apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlinx-serialization'


android {
    compileSdkVersion 30
    //buildToolsVersion "30.0.3"//"29.0.3"

    //https://blog.jetbrains.com/kotlin/2021/02/the-jvm-backend-is-in-beta-let-s-make-it-stable-together/
    kotlinOptions.useIR = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    defaultConfig {
        applicationId "de.felixlf.gradingscale"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 10
        versionName "0.10-beta"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Kotlin Coroutines
    def coroutines_version = "1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"

    //Serialization with Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"


    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.3.0-beta01'

    def androidx_recyclerview = "1.1.0"
    implementation "androidx.recyclerview:recyclerview:$androidx_recyclerview"

    //Lifecycle dependencies
    def lifecycle_version = '2.3.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //Navigation
    def nav_version = "2.3.4"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"


    //Room
    def room = "2.2.6"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"

    //paging
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version" // For Kotlin use paging-runtime-ktx


    //dagger hilt
    //def dagger_hilt = "2.31.2-alpha"
    def dagger_hilt = "2.36"
    implementation "com.google.dagger:hilt-android:$dagger_hilt"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'



    //instrumentation test dependencies
    def arch_version = "2.1.0"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"


    //debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    //unit test dependencies
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-inline:3.3.3'
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation "com.github.ologe:flow-test-observer:1.5.0"
    //testImplementation 'app.cash.turbine:turbine:0.3.0'



}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        apiVersion = '1.4'
        languageVersion = '1.4'

    }
}
